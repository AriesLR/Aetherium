@page "/settings"
@using Aetherium.Components.Functions.Config;
@using Aetherium.Components.Functions.Server;
@using Aetherium.Components.Functions.Services;
@using System.Diagnostics;
@inject ThemeService ThemeService

<div class="container">
    <div class="row">
        <div class="col">
            <h6>Version: @AppConfig.AppVersion</h6>

            <div class="themesdropdown">
                <div class="dropdown">
                    <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Themes
                    </button>
                    <ul class="dropdown-menu">
                        <li><button class="dropdown-item" @onclick="() => ChangeThemeDark()">Dark Theme</button></li>
                        <li><button class="dropdown-item" @onclick="() => ChangeThemeLight()">Light Theme</button></li>
                    </ul>
                </div>
            </div>

            <p>Themes not fully implemented, yet.</p>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <button class="btn btn-light bg-gradient btn-sm rcon-button" @onclick="Backup.PerformBackup">Backup</button>
        </div>
    </div>
</div>

@code {
    private async Task ChangeThemeDark()
    {
        var themeName = "a-dark";
        Debug.WriteLine($"Changing theme to: {themeName}");
        await ThemeService.SetThemeAsync(themeName);
    }

    private async Task ChangeThemeLight()
    {
        var themeName = "a-light";
        Debug.WriteLine($"Changing theme to: {themeName}");
        await ThemeService.SetThemeAsync(themeName);
    }
}
